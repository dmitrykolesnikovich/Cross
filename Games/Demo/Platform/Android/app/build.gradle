apply plugin: 'com.android.application'

android {
    compileSdkVersion 15
    buildToolsVersion "23.0.2"
    productFlavors {
        armV7{
            ndk{
                abiFilter "armeabi-v7a"
            }
        }
        arm64V8{
            ndk{
                abiFilter "arm64-v8a"
            }
        }
        x86 {
            ndk {
                abiFilter "x86"
            }
        }
        fat
    }
    defaultConfig {
        applicationId "com.cross.demo"
        minSdkVersion 8
        targetSdkVersion 8
        versionCode 1
        versionName "1.0"
        ndk {
            moduleName "cross"
            stl "c++_shared"
            ldLibs "log"
            ldLibs "android"
            ldLibs "GLESv2"
            ldLibs "EGL"
            cFlags " -std=c++11"
            cFlags += " -fexceptions"
            cFlags += " -I${project.buildDir}/../../../../../../Sources"
            cFlags += " -I${project.buildDir}/../../../../../../Sources/Libs/FreeType"
            cFlags += " -I${project.buildDir}/../../../../../../Sources/Libs/FreeType/freetype2"
            cFlags += " -I${project.buildDir}/../../../../../../Sources/Libs/Assimp"
            cFlags += " -I${project.buildDir}/../../../../../../Sources/Libs/TinyXML"
            ldLibs file(projectDir).absolutePath + "/src/main/jniLibs/\$(TARGET_ARCH_ABI)/libfmod.so"
            ldLibs file(projectDir).absolutePath + "/src/main/jniLibs/\$(TARGET_ARCH_ABI)/libfreetype2.so"
            ldLibs file(projectDir).absolutePath + "/src/main/jniLibs/\$(TARGET_ARCH_ABI)/libassimp.so"
        }
    }

    signingConfigs {
        release {
            storeFile file("d:/Trash/Confidencial/LittleMan/littlekeystore")
            //storePassword "********"
            storePassword "hideme2078"
            keyAlias "littel man"
            keyPassword 'hideme2078'
            //keyPassword "*****"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    sourceSets {
        main.assets.srcDirs += '/../../../Assets/Android'
        main.java.srcDirs += '../../../../../Sources/Platform/Android/'
        main.jni.srcDirs += '../../../Sources/'

        //main.jni.srcDirs += '../../../../../Sources/'
        main.jni.srcDirs += '../../../../../Sources/Utils/'
        main.jni.srcDirs += '../../../../../Sources/Experimental/'
        main.jni.srcDirs += '../../../../../Sources/Libs/SOIL/'
        main.jni.srcDirs += '../../../../../Sources/Libs/TinyXML/'
        main.jni.srcDirs += '../../../../../Sources/Shaders/'
        main.jni.srcDirs += '../../../../../Sources/Platform/Android/'

        main.jni.srcDirs += '../../../../../Sources/Audio.cpp'
        main.jni.srcDirs += '../../../../../Sources/Audio.h'
        main.jni.srcDirs += '../../../../../Sources/Camera.cpp'
        main.jni.srcDirs += '../../../../../Sources/Camera.h'
        main.jni.srcDirs += '../../../../../Sources/Camera2D.cpp'
        main.jni.srcDirs += '../../../../../Sources/Camera2D.h'
        main.jni.srcDirs += '../../../../../Sources/Camera3D.cpp'
        main.jni.srcDirs += '../../../../../Sources/Camera3D.h'
        main.jni.srcDirs += '../../../../../Sources/Color.cpp'
        main.jni.srcDirs += '../../../../../Sources/Color.h'
        main.jni.srcDirs += '../../../../../Sources/Config.cpp'
        main.jni.srcDirs += '../../../../../Sources/Config.h'
        main.jni.srcDirs += '../../../../../Sources/Exception.cpp'
        main.jni.srcDirs += '../../../../../Sources/Exception.h'
        main.jni.srcDirs += '../../../../../Sources/File.cpp'
        main.jni.srcDirs += '../../../../../Sources/File.h'
        main.jni.srcDirs += '../../../../../Sources/Font.cpp'
        main.jni.srcDirs += '../../../../../Sources/Font.h'
        main.jni.srcDirs += '../../../../../Sources/Game.cpp'
        main.jni.srcDirs += '../../../../../Sources/Game.h'
        main.jni.srcDirs += '../../../../../Sources/Graphics2D.cpp'
        main.jni.srcDirs += '../../../../../Sources/Graphics2D.h'
        main.jni.srcDirs += '../../../../../Sources/GraphicsGL.cpp'
        main.jni.srcDirs += '../../../../../Sources/GraphicsGL.h'
        main.jni.srcDirs += '../../../../../Sources/Input.cpp'
        main.jni.srcDirs += '../../../../../Sources/Input.h'
        main.jni.srcDirs += '../../../../../Sources/Launcher.cpp'
        main.jni.srcDirs += '../../../../../Sources/Launcher.h'
        main.jni.srcDirs += '../../../../../Sources/Matrix.cpp'
        main.jni.srcDirs += '../../../../../Sources/Matrix.h'
        main.jni.srcDirs += '../../../../../Sources/MemoryManager.cpp'
        main.jni.srcDirs += '../../../../../Sources/MemoryManager.h'
        main.jni.srcDirs += '../../../../../Sources/Rect.cpp'
        main.jni.srcDirs += '../../../../../Sources/Rect.h'
        main.jni.srcDirs += '../../../../../Sources/Sprite.cpp'
        main.jni.srcDirs += '../../../../../Sources/Sprite.h'
        main.jni.srcDirs += '../../../../../Sources/Vector2D.cpp'
        main.jni.srcDirs += '../../../../../Sources/Vector2D.h'
        main.jni.srcDirs += '../../../../../Sources/Vector3D.cpp'
        main.jni.srcDirs += '../../../../../Sources/Vector3D.h'
        main.jni.srcDirs += '../../../../../Sources/Vector4D.cpp'
        main.jni.srcDirs += '../../../../../Sources/Vector4D.h'
        main.jni.srcDirs += '../../../../../Sources/Cross.h'
        main.jni.srcDirs += '../../../../../Sources/Screen.h'
        main.jni.srcDirs += '../../../../../Sources/Screen.cpp'
        main.jni.srcDirs += '../../../../../Sources/Mesh.h'
        main.jni.srcDirs += '../../../../../Sources/Mesh.cpp'
        main.jni.srcDirs += '../../../../../Sources/Model.h'
        main.jni.srcDirs += '../../../../../Sources/Model.cpp'
        main.jni.srcDirs += '../../../../../Sources/Graphics3D.h'
        main.jni.srcDirs += '../../../../../Sources/Graphics3D.cpp'
        main.jni.srcDirs += '../../../../../Sources/Transformable.h'
        main.jni.srcDirs += '../../../../../Sources/Transformable.cpp'
        main.jni.srcDirs += '../../../../../Sources/Texture.h'
        main.jni.srcDirs += '../../../../../Sources/Texture.cpp'
        main.jni.srcDirs += '../../../../../Sources/Quaternion.h'
        main.jni.srcDirs += '../../../../../Sources/Quaternion.cpp'
        main.jni.srcDirs += '../../../../../Sources/Scene.h'
        main.jni.srcDirs += '../../../../../Sources/Scene.cpp'
        main.jni.srcDirs += '../../../../../Sources/VertexBuffer.h'
        main.jni.srcDirs += '../../../../../Sources/VertexBuffer.cpp'
        main.jni.srcDirs += '../../../../../Sources/Material.h'
        main.jni.srcDirs += '../../../../../Sources/Material.cpp'
        main.jni.srcDirs += '../../../../../Sources/UI.h'
        main.jni.srcDirs += '../../../../../Sources/UI.cpp'
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
}
